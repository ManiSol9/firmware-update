{"version":3,"sources":["components/update/play.svg","components/reboot/reboot.js","components/log/log.js","components/uploadTwin/uploadTwin.js","components/common/styledProgressBar.js","components/update/update.js","components/fileupload/fileupload.js","components/main/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","process","REACT_APP_VM_SERVER","REACT_APP_REBOOT","Reboot","state","rebootStatus","rebootStatusLoading","getStatus","_this","setState","axios","method","url","then","response","console","log","Object","objectSpread","data","catch","err","showStatus","status","key","react_default","a","createElement","index","rebootType","this","_this2","_this$state","className","length","map","type","onClick","Component","REACT_APP_AZURE_SERVER","REACT_APP_LOG","UploadTwin","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","logMessage","e","preventDefault","deviceID","message","alert","logging","headers","Access-Control-Allow-Origin","Content-Type","Access-Control-Allow-Headers","Access-Control-Allow-Methods","DeviceID","Message","handleInput","_e$target","target","name","value","_this$state2","onSubmit","id","placeholder","onChange","REACT_APP_UPDATE_TWIN","updateTwin","softwareVersion","reboot","updateTwinLoading","software_version","htmlFor","aria-describedby","StyledProgressbar","dist_default","percentage","text","strokeWidth","styles","root","path","stroke","strokeLinecap","transition","trail","fill","fontSize","REACT_APP_GETSTATUS","Update","getFirmwareLoading","firmwareStatuses","otaStatus","currentVersion","pendingVersion","style","width","styledProgressBar","concat","uploadTwin_UploadTwin","cursor","data-toggle","data-target","role","aria-expanded","aria-controls","src","require","alt","textAlign","REACT_APP_SERVER","REACT_APP_GETBLOBS","REACT_APP_UPLOADBLOB","columns","Header","accessor","resizable","Cell","href","FileUpload","uploadFirmware","selectedFile","uploadFirmwareLoading","formData","FormData","append","post","content-type","getBlobDetails","error","document","getElementById","getBlobsLoading","blobs","handleselectedFile","event","files","es","pageSizeOptions","loading","showPagination","defaultPageSize","loadingText","noDataText","accept","Main","color","aria-labelledby","data-parent","fileupload_FileUpload","update_Update","log_UploadTwin","reboot_Reboot","App","BrowserRouter","Switch","Route","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e30dcc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.1d5f4bfc.svg\";","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nconst { REACT_APP_VM_SERVER, REACT_APP_REBOOT } = process.env;\r\n\r\nexport default class Reboot extends Component {\r\n  state = {\r\n    rebootStatus: [],\r\n    rebootStatusLoading: false\r\n  };\r\n  componentWillMount() {\r\n    this.getStatus();\r\n  }\r\n\r\n  getStatus = () => {\r\n    this.setState({ rebootStatusLoading: true });\r\n    axios({\r\n      method: \"get\",\r\n      url: REACT_APP_VM_SERVER + REACT_APP_REBOOT\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({ rebootStatus: [{ ...response.data }] });\r\n        this.setState({ rebootStatusLoading: false });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ rebootStatusLoading: false });\r\n      });\r\n  };\r\n  showStatus = (status, key) => {\r\n    return (\r\n      <div index={key}>\r\n        <p><b>Reboot status:</b>&nbsp;<span>{status.status?status.status:'--'}</span></p><br/>\r\n        <p><b>Reeboot type:</b>&nbsp;<span>{status.rebootType}</span></p>\r\n      </div>\r\n    )\r\n  }\r\n  render() {\r\n    const { rebootStatus, rebootStatusLoading } = this.state;\r\n    return (\r\n      <div className=\"box-it\">\r\n        {rebootStatus.length ? (\r\n          rebootStatus.map((status, index) => this.showStatus(status, index))\r\n        ) : (\r\n          <div>\r\n            <p><b>Reboot status:</b>&nbsp;<span>{'--'}</span></p><br/>\r\n            <p><b>Reeboot type:</b>&nbsp;<span>{'--'}</span></p>\r\n          </div>\r\n        )}\r\n        <button type=\"button\" className=\"fluid-btn\" onClick={this.getStatus}>\r\n          {rebootStatusLoading ? \"Refreshing..\" : \"Refresh\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./log.css\";\r\nconst { REACT_APP_AZURE_SERVER, REACT_APP_LOG } = process.env;\r\n\r\nexport default class UploadTwin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      deviceID: \"\",\r\n      message: \"\",\r\n      logging:false\r\n    };\r\n  }\r\n  logMessage = e => {\r\n    e.preventDefault();\r\n    const { deviceID, message } = this.state;\r\n    if (deviceID === \"\" || message === \"\") {\r\n      alert(\"Please enter all the fields\");\r\n    } else {\r\n      this.setState({ logging: true });\r\n      axios({\r\n        method: \"post\",\r\n        url: REACT_APP_AZURE_SERVER + REACT_APP_LOG ,\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Headers\":\"Authorization, Content-Type\",\r\n          \"Access-Control-Allow-Methods\": \"POST\"\r\n        },\r\n        data: {\r\n          DeviceID: deviceID,\r\n          Message: message\r\n        }\r\n      })\r\n        .then(response => {\r\n          console.log(response);\r\n          alert('Log registered successfully')\r\n          this.setState({ logging: false, deviceID:'', message:'' });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          alert('Error in Logging.')\r\n          this.setState({ logging: false });\r\n        });\r\n    }\r\n  };\r\n  handleInput = e => {\r\n    const { name, value } = e.target;\r\n    if (name === \"deviceID\") {\r\n      this.setState({ deviceID: value });\r\n    }else if (name === \"message\") {\r\n      this.setState({ message: value });\r\n    }\r\n  };\r\n  render() {\r\n    const { deviceID, message, logging } = this.state;\r\n    return (\r\n      <div className=\"box-it\">\r\n        <form onSubmit={this.logMessage}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"deviceID\"\r\n              value={deviceID}\r\n              name=\"deviceID\"\r\n              placeholder=\"Enter device ID..\"\r\n              onChange={this.handleInput}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              value={message}\r\n              name=\"message\"\r\n              className=\"form-control\"\r\n              id=\"message\"\r\n              placeholder=\"Enter message..\"\r\n              onChange={this.handleInput}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"cust-btn\">\r\n            {logging?'Logging..':'Log'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./uploadTwin.css\";\r\nconst { REACT_APP_VM_SERVER, REACT_APP_UPDATE_TWIN } = process.env;\r\n\r\nexport default class UploadTwin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      softwareVersion: \"1.0.0.006\",\r\n      updateTwinLoading: false,\r\n      reboot:\"True\",\r\n      url:\r\n        \"https://wrdm2chetanpackage.blob.core.windows.net/wrdm2-package-file-chetan/package.tar.gz\"\r\n    };\r\n  }\r\n  updateTwin = e => {\r\n    e.preventDefault();\r\n    const { softwareVersion, url, reboot } = this.state;\r\n    if (softwareVersion === \"\" || url === \"\") {\r\n      alert(\"Please enter all the fields\");\r\n    } else {\r\n      this.setState({ updateTwinLoading: true });\r\n      axios({\r\n        method: \"post\",\r\n        url: REACT_APP_VM_SERVER + REACT_APP_UPDATE_TWIN ,\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Headers\":\"Authorization, Content-Type\",\r\n          \"Access-Control-Allow-Methods\": \"POST\"\r\n        },\r\n        data: {\r\n          software_version: softwareVersion,\r\n          url: url,\r\n          reboot: reboot\r\n        }\r\n      })\r\n        .then(response => {\r\n          console.log(response);\r\n          alert('Firmware updated successfully')\r\n          this.setState({ updateTwinLoading: false });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          alert('Error in Firmware update')\r\n          this.setState({ updateTwinLoading: false });\r\n        });\r\n    }\r\n  };\r\n  handleInput = e => {\r\n    const { name, value } = e.target;\r\n    if (name === \"url\") {\r\n      this.setState({ url: value });\r\n    }\r\n    if (name === \"reboot\") {\r\n      this.setState({ reboot: value });\r\n    }\r\n    if (name === \"softwareVersion\") {\r\n      this.setState({ softwareVersion: value });\r\n    }\r\n  };\r\n  render() {\r\n    const { url, softwareVersion, updateTwinLoading, reboot } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.updateTwin}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Software version</label>\r\n            <input\r\n              type=\"software-version\"\r\n              className=\"form-control\"\r\n              id=\"software\"\r\n              value={softwareVersion}\r\n              name=\"softwareVersion\"\r\n              aria-describedby=\"softwareHelp\"\r\n              placeholder=\"Enter software version\"\r\n              onChange={this.handleInput}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputPassword1\">Blob URL</label>\r\n            <input\r\n              type=\"text\"\r\n              value={url}\r\n              name=\"url\"\r\n              className=\"form-control\"\r\n              id=\"blobUrl\"\r\n              placeholder=\"Enter Blob URL\"\r\n              onChange={this.handleInput}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"rebootType\">Reboot</label>\r\n            <select className=\"form-control\" id=\"rebootType\" value={reboot}\r\n              name=\"reboot\" onChange={this.handleInput}>\r\n              <option>True</option>\r\n              <option>False</option>\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\" className=\"cust-btn\">\r\n            {updateTwinLoading?'Updating Firmware..':'Update firmware'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CircularProgressbar from 'react-circular-progressbar';\r\n\r\nfunction StyledProgressbar(props) {\r\n  return (\r\n    <CircularProgressbar\r\n      percentage={props.percentage}\r\n      text={props.text}\r\n      // Path width must be customized with strokeWidth,\r\n      // since it informs dimension calculations.\r\n      strokeWidth={5}\r\n      // You can override styles either by specifying this \"styles\" prop,\r\n      // or by overriding the default CSS here:\r\n      // https://github.com/iqnivek/react-circular-progressbar/blob/master/src/styles.css\r\n      styles={{\r\n        // Customize the root svg element\r\n        root: {},\r\n        // Customize the path, i.e. the part that's \"complete\"\r\n        path: {\r\n          // Tweak path color:\r\n          stroke: '#2c55ba',\r\n          // Tweak path to use flat or rounded ends:\r\n          strokeLinecap: 'butt',\r\n          // Tweak transition animation:\r\n          transition: 'stroke-dashoffset 0.5s ease 0s',\r\n        },\r\n        // Customize the circle behind the path\r\n        trail: {\r\n          // Tweak the trail color:\r\n          stroke: '#d6d6d6',\r\n        },\r\n        // Customize the text\r\n        text: {\r\n          // Tweak text color:\r\n          fill: '#2c55ba',\r\n          // Tweak text size:\r\n          fontSize: '30px',\r\n        },\r\n      }}\r\n    />\r\n  );\r\n}\r\nexport default StyledProgressbar;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport UploadTwin from \"../uploadTwin/uploadTwin\";\r\nimport \"./update.css\";\r\nimport StyledProgressbar from \"../common/styledProgressBar\";\r\nconst { REACT_APP_VM_SERVER, REACT_APP_GETSTATUS } = process.env;\r\nexport default class Update extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firmwareStatuses: [],\r\n      getFirmwareLoading: false\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getStatus();\r\n  }\r\n\r\n  getStatus = () => {\r\n    this.setState({ getFirmwareLoading: true });\r\n    axios({\r\n      method: \"get\",\r\n      url: REACT_APP_VM_SERVER + REACT_APP_GETSTATUS\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({ firmwareStatuses: [{ ...response.data }] });\r\n        this.setState({ getFirmwareLoading: false });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ getFirmwareLoading: false });\r\n      });\r\n  };\r\n\r\n  showStatus = (status, index) => {\r\n    let percentage = 0;\r\n    switch (status.otaStatus) {\r\n      case \"WaitingForUpdate\":\r\n        percentage = 5;\r\n        break;\r\n      case \"SoftwareUpdateinProgress\":\r\n        percentage = 15;\r\n        break;\r\n      case \"DownloadComplete\":\r\n        percentage = 25;\r\n        break;\r\n      case \"UnzipComplete\":\r\n        percentage = 40;\r\n        break;\r\n      case \"ReadPackageDataComplete\":\r\n        percentage = 55;\r\n        break;\r\n      case \"PreInstallComplete\":\r\n        percentage = 70;\r\n        break;\r\n      case \"InstallComplete\":\r\n        percentage = 85;\r\n        break;\r\n      case \"SoftwareUpdateComplete\":\r\n        percentage = 100;\r\n        break;\r\n      default:\r\n        percentage = 0;\r\n    }\r\n    return (\r\n      <div className=\"status-container\" key={index}>\r\n        <div className=\"status-details-container\">\r\n          <b>OTA Status: </b>\r\n          <span>{status.otaStatus}</span>\r\n          <br />\r\n          <b>Current version: </b>\r\n          <span>{status.currentVersion}</span>\r\n          <br />\r\n          <b>Pending Status: </b>\r\n          <span>{status.pendingVersion}</span>\r\n          <br />\r\n        </div>\r\n        <div style={{ width: \"76px\" }}>\r\n          <StyledProgressbar percentage={percentage} text={`${percentage}%`} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    const { firmwareStatuses, getFirmwareLoading } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"row update-row\">\r\n          <div className=\"col-6\">\r\n            <UploadTwin />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header toggle-card\" id=\"headingOne\">\r\n                  <div\r\n                    className=\"row\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#toggleFirmware\"\r\n                    role=\"button\"\r\n                    aria-expanded=\"false\"\r\n                    aria-controls=\"toggleFirmware\"\r\n                  >\r\n                    <img\r\n                      className=\"img-upload\"\r\n                      src={require(\"./play.svg\")}\r\n                      alt=\"...\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#showFirmwareDetails\"\r\n                    />\r\n                    <p className=\"col-10 upload-text\">Status</p>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"collapse multi-collapse\" id=\"toggleFirmware\">\r\n                    <div className=\"card firm-card\">\r\n                      <div className=\"card-body\">\r\n                        {firmwareStatuses.length?firmwareStatuses.map((status, index) =>\r\n                          this.showStatus(status, index)\r\n                        ):<p style={{'textAlign': 'center'}}>No records found</p>}\r\n                      </div>\r\n                      <div className=\"toogle-footer\">\r\n                        <button type=\"button\" className=\"cust-btn\">\r\n                          View Logs\r\n                        </button>\r\n                        <button type=\"button\" className=\"cust-btn\" onClick={this.getStatus}>\r\n                          {getFirmwareLoading?'Refreshing..':'Refresh'}\r\n                        </button>\r\n                        {/* <img\r\n                          className=\"close-firm\"\r\n                          src={require(\"./close.svg\")}\r\n                          title=\"close\"\r\n                          alt=\"...\"\r\n                        />\r\n                        <img\r\n                          className=\"upload-firm\"\r\n                          src={require(\"./upload.svg\")}\r\n                          title=\"upload\"\r\n                          alt=\"...\"\r\n                        />\r\n                        <img\r\n                          className=\"send-firm\"\r\n                          src={require(\"./send.svg\")}\r\n                          title=\"send\"\r\n                          alt=\"...\"\r\n                        /> */}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport \"./fileupload.css\";\r\nconst {\r\n  REACT_APP_SERVER,\r\n  REACT_APP_GETBLOBS,\r\n  REACT_APP_UPLOADBLOB\r\n} = process.env;\r\nconst columns = [\r\n  {\r\n    Header: \"Name\",\r\n    accessor: \"name\" // String-based value accessors!\r\n  },\r\n  {\r\n    Header: \"Download Link\",\r\n    resizable: true,\r\n    accessor: \"name\",\r\n    Cell: props => (\r\n      <a\r\n        href={`https://wrdm2chetanpackage.blob.core.windows.net/firmware/${\r\n          props.value\r\n        }`}\r\n      >\r\n        Link\r\n      </a>\r\n    )\r\n  },\r\n  {\r\n    Header: \"Date\",\r\n    accessor: \"lastModified\"\r\n  }\r\n];\r\nexport default class FileUpload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      blobs: [],\r\n      getBlobsLoading: false,\r\n      uploadFirmwareLoading: false\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getBlobDetails();\r\n  }\r\n\r\n  uploadFirmware = () => {\r\n    if (this.state.selectedFile) {\r\n      this.setState({ uploadFirmwareLoading: true });\r\n      const formData = new FormData();\r\n      formData.append(\"firmare\", this.state.selectedFile);\r\n      const config = {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\"\r\n        }\r\n      };\r\n      axios\r\n        .post(REACT_APP_SERVER + REACT_APP_UPLOADBLOB, formData, config)\r\n        .then(response => {\r\n          console.log(\"ki\", response);\r\n          this.setState({ uploadFirmwareLoading: false });\r\n          if (response.data.status) {\r\n            alert(response.data.message);\r\n            this.getBlobDetails();\r\n          } else {\r\n            alert(response.data.message);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          alert(\"Error in upload\");\r\n          this.setState({ uploadFirmwareLoading: false });\r\n        });\r\n      document.getElementById(\"file\").value = \"\";\r\n      this.setState({ selectedFile: null });\r\n    } else {\r\n      alert(\"Please select a file\");\r\n    }\r\n  };\r\n\r\n  getBlobDetails = () => {\r\n    this.setState({ getBlobsLoading: true });\r\n    axios({\r\n      method: \"get\",\r\n      url: REACT_APP_SERVER + REACT_APP_GETBLOBS\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        if (response.data.status) {\r\n          this.setState({ blobs: response.data.blobs });\r\n        }\r\n        this.setState({ getBlobsLoading: false });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ getBlobsLoading: false });\r\n      });\r\n  };\r\n\r\n  handleselectedFile = event => {\r\n    event.preventDefault();\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n  };\r\n  render() {\r\n    const { blobs, getBlobsLoading } = this.state;\r\n    return (\r\n      <div>\r\n        <ReactTable\r\n          data={blobs}\r\n          columns={columns}\r\n          pageSizeOptions={[3]}\r\n          loading={getBlobsLoading}\r\n          showPagination={true}\r\n          defaultPageSize={3}\r\n          width={170}\r\n          loadingText={\"Fetching firmwares..\"}\r\n          noDataText={\"No Firmwares found..\"}\r\n        />\r\n        <div className=\"upload-container\">\r\n          <label>\r\n            <b>Upload Firmware file to blob: </b>\r\n          </label>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"custom-file\">\r\n              <input\r\n                id=\"file\"\r\n                type=\"file\"\r\n                accept=\".gz, .zip\"\r\n                onChange={this.handleselectedFile}\r\n                name=\"myFile\"\r\n              />\r\n              <br />\r\n              <br />\r\n            </div>\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"cust-btn\"\r\n                onClick={this.uploadFirmware}\r\n              >\r\n                Upload File\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Reboot from \"../reboot/reboot\";\r\nimport Log from '../log/log';\r\nimport Update from \"../update/update\";\r\nimport FileUpload from \"../fileupload/fileupload\";\r\n\r\nexport default class Main extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container cust-home\">\r\n          <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header custom-header\" id=\"headingOne\">\r\n                <h5 className=\"mb-0\">\r\n                  <a\r\n                    href=\"false\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#collapseOne\"\r\n                    aria-expanded=\"true\"\r\n                    aria-controls=\"collapseOne\"\r\n                    style={{'color': 'white'}}\r\n                  >\r\n                    <span className=\"fa fa-tasks\" />\r\n                    <label>\r\n                      <b>&nbsp;&nbsp;Firmwares in blob: </b>\r\n                    </label>\r\n                    <i className=\"fa fa-angle-down pull-right\" />\r\n                  </a>\r\n                </h5>\r\n              </div>\r\n\r\n              <div\r\n                id=\"collapseOne\"\r\n                className=\"collapse show\"\r\n                aria-labelledby=\"headingOne\"\r\n                data-parent=\"#accordionExample\"\r\n              >\r\n                <div className=\"card-body\">\r\n                  <FileUpload />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card\">\r\n              <div className=\"card-header custom-header\" id=\"headingTwo\">\r\n                <h5 className=\"mb-0\">\r\n                  <a\r\n                    href=\"false\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#collapseTwo\"\r\n                    aria-expanded=\"false\"\r\n                    aria-controls=\"collapseTwo\"\r\n                    style={{'color': 'white'}}\r\n                  >\r\n                    <span className=\"fa fa-spinner\" />\r\n                    <label>\r\n                      <b>&nbsp;&nbsp;Firmware status: </b>\r\n                    </label>\r\n                    <i className=\"fa fa-angle-down pull-right\" />\r\n                  </a>\r\n                </h5>\r\n              </div>\r\n              <div\r\n                id=\"collapseTwo\"\r\n                className=\"collapse\"\r\n                aria-labelledby=\"headingTwo\"\r\n                data-parent=\"#accordionExample\"\r\n              >\r\n                <div className=\"card-body\">\r\n                  <Update />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card\">\r\n              <div className=\"card-header custom-header\" id=\"headingThree\">\r\n                <h5 className=\"mb-0\">\r\n                  <a\r\n                    href=\"false\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#collapseThree\"\r\n                    aria-expanded=\"false\"\r\n                    aria-controls=\"collapseThree\"\r\n                    style={{'color': 'white'}}\r\n                  >\r\n                    <span className=\"fa fa-desktop\" />\r\n                    <label>\r\n                      <b>&nbsp;&nbsp;Reboot status and logs: </b>\r\n                    </label>\r\n                    <i className=\"fa fa-angle-down pull-right\" />\r\n                  </a>\r\n                </h5>\r\n              </div>\r\n              <div\r\n                id=\"collapseThree\"\r\n                className=\"collapse\"\r\n                aria-labelledby=\"headingThree\"\r\n                data-parent=\"#accordionExample\"\r\n              >\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                      <Log />\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <Reboot />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Main from './components/main/main';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Main} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}