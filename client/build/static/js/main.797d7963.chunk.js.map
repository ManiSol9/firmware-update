{"version":3,"sources":["components/update/play.svg","components/setlog/play.svg","components/reboot/reboot.js","components/log/log.js","components/uploadTwin/uploadTwin.js","components/common/styledProgressBar.js","components/update/update.js","components/fileupload/fileupload.js","components/setlog/setlog.js","components/main/main.js","components/runCommand/runCommand.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","process","REACT_APP_VM_SERVER","REACT_APP_REBOOT","Reboot","state","rebootStatus","rebootStatusLoading","getStatus","_this","setState","axios","method","url","then","response","console","log","Object","objectSpread","data","catch","err","showStatus","status","key","react_default","a","createElement","index","rebootType","this","_this2","_this$state","className","length","map","type","onClick","Component","UploadTwin","REACT_APP_UPDATE_REBOOT","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","logMessage","e","preventDefault","deviceID","message","logging","headers","Access-Control-Allow-Origin","Content-Type","Access-Control-Allow-Headers","Access-Control-Allow-Methods","reboot","alert","handleInput","_e$target","target","name","value","_this$state2","onSubmit","REACT_APP_UPDATE_TWIN","updateTwin","softwareVersion","updateTwinLoading","software_version","htmlFor","id","aria-describedby","placeholder","onChange","StyledProgressbar","dist_default","percentage","text","strokeWidth","styles","root","path","stroke","strokeLinecap","transition","trail","fill","fontSize","REACT_APP_GETSTATUS","Update","getFirmwareLoading","firmwareStatuses","otaStatus","currentVersion","pendingVersion","style","width","styledProgressBar","concat","uploadTwin_UploadTwin","cursor","data-toggle","data-target","role","aria-expanded","aria-controls","src","require","alt","textAlign","REACT_APP_SERVER","REACT_APP_GETBLOBS","REACT_APP_UPLOADBLOB","columns","Header","accessor","resizable","Cell","href","FileUpload","uploadFirmware","selectedFile","uploadFirmwareLoading","formData","FormData","append","post","content-type","getBlobDetails","error","document","getElementById","getBlobsLoading","blobs","handleselectedFile","event","files","es","pageSizeOptions","loading","showPagination","defaultPageSize","loadingText","noDataText","accept","SetLog","updateSet","buttonstatus","settime","time","onBlur","Main","color","aria-labelledby","data-parent","fileupload_FileUpload","update_Update","log_UploadTwin","reboot_Reboot","setlog_SetLog","REACT_APP_RUN_COMMAND","RunCommand","REACT_APP_RUN_DIAG","REACT_APP_GET_COMMAND","command","runnigCommand","availableCmd","execCmd","filter","cmd","trim","method_name","copyToClipboard","element","$temp","$","val","select","execCommand","remove","rows","readOnly","margin","data-placement","title","App","Switch","Route","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.797d7963.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.1d5f4bfc.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.1d5f4bfc.svg\";","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nconst { REACT_APP_VM_SERVER, REACT_APP_REBOOT } = process.env;\r\n\r\nexport default class Reboot extends Component {\r\n  state = {\r\n    rebootStatus: [],\r\n    rebootStatusLoading: false\r\n  };\r\n  componentWillMount() {\r\n    this.getStatus();\r\n  }\r\n\r\n  getStatus = () => {\r\n    this.setState({ rebootStatusLoading: true });\r\n    axios({\r\n      method: \"get\",\r\n      url: REACT_APP_VM_SERVER + REACT_APP_REBOOT\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({ rebootStatus: [{ ...response.data }] });\r\n        this.setState({ rebootStatusLoading: false });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ rebootStatusLoading: false });\r\n      });\r\n  };\r\n  showStatus = (status, key) => {\r\n    return (\r\n      <div index={key}>\r\n        <p><b>Reboot status:</b>&nbsp;<span>{status.status?status.status:'--'}</span></p><br/>\r\n        <p><b>Reboot type:</b>&nbsp;<span>{status.rebootType}</span></p>\r\n      </div>\r\n    )\r\n  }\r\n  render() {\r\n    const { rebootStatus, rebootStatusLoading } = this.state;\r\n    return (\r\n      <div className=\"box-it\">\r\n        {rebootStatus.length ? (\r\n          rebootStatus.map((status, index) => this.showStatus(status, index))\r\n        ) : (\r\n          <div>\r\n            <p><b>Reboot status:</b>&nbsp;<span>{'--'}</span></p><br/>\r\n            <p><b>Reboot type:</b>&nbsp;<span>{'--'}</span></p>\r\n          </div>\r\n        )}\r\n        <button type=\"button\" className=\"fluid-btn\" onClick={this.getStatus}>\r\n          {rebootStatusLoading ? \"Refreshing..\" : \"Refresh\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./log.css\";\r\nconst { REACT_APP_VM_SERVER, REACT_APP_UPDATE_REBOOT } = process.env;\r\n\r\nexport default class UploadTwin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      deviceID: \"\",\r\n      message: \"\",\r\n      logging:false\r\n    };\r\n  }\r\n  logMessage = e => {\r\n    e.preventDefault();\r\n    const { deviceID, message } = this.state;\r\n      this.setState({ logging: true });\r\n      axios({\r\n        method: \"post\",\r\n        url: REACT_APP_VM_SERVER + 'updatereboot',\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Headers\":\"Authorization, Content-Type\",\r\n          \"Access-Control-Allow-Methods\": \"POST\"\r\n        },\r\n        data: {\r\n          \"reboot\": \"true\"\r\n        }\r\n      })\r\n        .then(response => {\r\n          console.log(response);\r\n          alert('Reboot successfully')\r\n          this.setState({ logging: false, deviceID:'', message:'' });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          alert('Error in Reboot.')\r\n          this.setState({ logging: false });\r\n        });\r\n  };\r\n  handleInput = e => {\r\n    const { name, value } = e.target;\r\n    if (name === \"deviceID\") {\r\n      this.setState({ deviceID: value });\r\n    }else if (name === \"message\") {\r\n      this.setState({ message: value });\r\n    }\r\n  };\r\n  render() {\r\n    const { deviceID, message, logging } = this.state;\r\n    return (\r\n      <div className=\"box-it\">\r\n        <form onSubmit={this.logMessage}>\r\n          {\r\n            /*\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"deviceID\"\r\n              value={deviceID}\r\n              name=\"deviceID\"\r\n              placeholder=\"Enter device ID..\"\r\n              onChange={this.handleInput}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              value={message}\r\n              name=\"message\"\r\n              className=\"form-control\"\r\n              id=\"message\"\r\n              placeholder=\"Enter message..\"\r\n              onChange={this.handleInput}\r\n            />\r\n          </div>\r\n          */\r\n          }\r\n          <button type=\"submit\" className=\"cust-btn\">\r\n            {logging?'Rebooting..':'Reboot'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./uploadTwin.css\";\r\nconst { REACT_APP_VM_SERVER, REACT_APP_UPDATE_TWIN } = process.env;\r\n\r\nexport default class UploadTwin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      softwareVersion: \"1.0.0.006\",\r\n      updateTwinLoading: false,\r\n      reboot:\"True\",\r\n      url:\r\n        \"https://wrdm2chetanpackage.blob.core.windows.net/wrdm2-package-file-chetan/package.tar.gz\"\r\n    };\r\n  }\r\n  updateTwin = e => {\r\n    e.preventDefault();\r\n    const { softwareVersion, url, reboot } = this.state;\r\n    if (softwareVersion === \"\" || url === \"\") {\r\n      alert(\"Please enter all the fields\");\r\n    } else {\r\n      this.setState({ updateTwinLoading: true });\r\n      axios({\r\n        method: \"post\",\r\n        url: REACT_APP_VM_SERVER + REACT_APP_UPDATE_TWIN ,\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Headers\":\"Authorization, Content-Type\",\r\n          \"Access-Control-Allow-Methods\": \"POST\"\r\n        },\r\n        data: {\r\n          software_version: softwareVersion,\r\n          url: url\r\n          //reboot: reboot\r\n        }\r\n      })\r\n        .then(response => {\r\n          console.log(response);\r\n          alert('Firmware updated successfully')\r\n          this.setState({ updateTwinLoading: false });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          alert('Error in Firmware update')\r\n          this.setState({ updateTwinLoading: false });\r\n        });\r\n    }\r\n  };\r\n  handleInput = e => {\r\n    const { name, value } = e.target;\r\n    if (name === \"url\") {\r\n      this.setState({ url: value });\r\n    }\r\n    if (name === \"reboot\") {\r\n      this.setState({ reboot: value });\r\n    }\r\n    if (name === \"softwareVersion\") {\r\n      this.setState({ softwareVersion: value });\r\n    }\r\n  };\r\n  render() {\r\n    const { url, softwareVersion, updateTwinLoading, reboot } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.updateTwin}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Software version</label>\r\n            <input\r\n              type=\"software-version\"\r\n              className=\"form-control\"\r\n              id=\"software\"\r\n              value={softwareVersion}\r\n              name=\"softwareVersion\"\r\n              aria-describedby=\"softwareHelp\"\r\n              placeholder=\"Enter software version\"\r\n              onChange={this.handleInput}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputPassword1\">Blob URL</label>\r\n            <input\r\n              type=\"text\"\r\n              value={url}\r\n              name=\"url\"\r\n              className=\"form-control\"\r\n              id=\"blobUrl\"\r\n              placeholder=\"Enter Blob URL\"\r\n              onChange={this.handleInput}\r\n            />\r\n          </div>\r\n          {\r\n            /*\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"rebootType\">Reboot</label>\r\n                <select className=\"form-control\" id=\"rebootType\" value={reboot}\r\n                  name=\"reboot\" onChange={this.handleInput}>\r\n                  <option>True</option>\r\n                  <option>False</option>\r\n                </select>\r\n              </div>\r\n              */\r\n          }\r\n          <button type=\"submit\" className=\"cust-btn\">\r\n            {updateTwinLoading?'Updating Firmware..':'Update firmware'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CircularProgressbar from 'react-circular-progressbar';\r\n\r\nfunction StyledProgressbar(props) {\r\n  return (\r\n    <CircularProgressbar\r\n      percentage={props.percentage}\r\n      text={props.text}\r\n      // Path width must be customized with strokeWidth,\r\n      // since it informs dimension calculations.\r\n      strokeWidth={5}\r\n      // You can override styles either by specifying this \"styles\" prop,\r\n      // or by overriding the default CSS here:\r\n      // https://github.com/iqnivek/react-circular-progressbar/blob/master/src/styles.css\r\n      styles={{\r\n        // Customize the root svg element\r\n        root: {},\r\n        // Customize the path, i.e. the part that's \"complete\"\r\n        path: {\r\n          // Tweak path color:\r\n          stroke: '#2c55ba',\r\n          // Tweak path to use flat or rounded ends:\r\n          strokeLinecap: 'butt',\r\n          // Tweak transition animation:\r\n          transition: 'stroke-dashoffset 0.5s ease 0s',\r\n        },\r\n        // Customize the circle behind the path\r\n        trail: {\r\n          // Tweak the trail color:\r\n          stroke: '#d6d6d6',\r\n        },\r\n        // Customize the text\r\n        text: {\r\n          // Tweak text color:\r\n          fill: '#2c55ba',\r\n          // Tweak text size:\r\n          fontSize: '30px',\r\n        },\r\n      }}\r\n    />\r\n  );\r\n}\r\nexport default StyledProgressbar;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport UploadTwin from \"../uploadTwin/uploadTwin\";\r\nimport \"./update.css\";\r\nimport StyledProgressbar from \"../common/styledProgressBar\";\r\nconst { REACT_APP_VM_SERVER, REACT_APP_GETSTATUS } = process.env;\r\nexport default class Update extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firmwareStatuses: [],\r\n      getFirmwareLoading: false\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getStatus();\r\n  }\r\n\r\n  getStatus = () => {\r\n    this.setState({ getFirmwareLoading: true });\r\n    axios({\r\n      method: \"get\",\r\n      url: REACT_APP_VM_SERVER + REACT_APP_GETSTATUS\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({ firmwareStatuses: [{ ...response.data }] });\r\n        this.setState({ getFirmwareLoading: false });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ getFirmwareLoading: false });\r\n      });\r\n  };\r\n\r\n  showStatus = (status, index) => {\r\n    let percentage = 0;\r\n    switch (status.otaStatus) {\r\n      case \"WaitingForUpdate\":\r\n        percentage = 5;\r\n        break;\r\n      case \"SoftwareUpdateinProgress\":\r\n        percentage = 15;\r\n        break;\r\n      case \"DownloadComplete\":\r\n        percentage = 25;\r\n        break;\r\n      case \"UnzipComplete\":\r\n        percentage = 40;\r\n        break;\r\n      case \"ReadPackageDataComplete\":\r\n        percentage = 55;\r\n        break;\r\n      case \"PreInstallComplete\":\r\n        percentage = 70;\r\n        break;\r\n      case \"InstallComplete\":\r\n        percentage = 85;\r\n        break;\r\n      case \"SoftwareUpdateComplete\":\r\n        percentage = 100;\r\n        break;\r\n      default:\r\n        percentage = 0;\r\n    }\r\n    return (\r\n      <div className=\"status-container\" key={index}>\r\n        <div className=\"status-details-container\">\r\n          <b>OTA Status: </b>\r\n          <span>{status.otaStatus}</span>\r\n          <br />\r\n          <b>Current version: </b>\r\n          <span>{status.currentVersion}</span>\r\n          <br />\r\n          <b>Pending Status: </b>\r\n          <span>{status.pendingVersion}</span>\r\n          <br />\r\n        </div>\r\n        <div style={{ width: \"76px\" }}>\r\n          <StyledProgressbar percentage={percentage} text={`${percentage}%`} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    const { firmwareStatuses, getFirmwareLoading } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"row update-row\">\r\n          <div className=\"col-6\">\r\n            <UploadTwin />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header toggle-card\" id=\"headingOne\">\r\n                  <div\r\n                    className=\"row\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#toggleFirmware\"\r\n                    role=\"button\"\r\n                    aria-expanded=\"false\"\r\n                    aria-controls=\"toggleFirmware\"\r\n                  >\r\n                    <img\r\n                      className=\"img-upload\"\r\n                      src={require(\"./play.svg\")}\r\n                      alt=\"...\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#showFirmwareDetails\"\r\n                    />\r\n                    <p className=\"col-10 upload-text\">Status</p>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"collapse multi-collapse\" id=\"toggleFirmware\">\r\n                    <div className=\"card firm-card\">\r\n                      <div className=\"card-body\">\r\n                        {firmwareStatuses.length?firmwareStatuses.map((status, index) =>\r\n                          this.showStatus(status, index)\r\n                        ):<p style={{'textAlign': 'center'}}>No records found</p>}\r\n                      </div>\r\n                      <div className=\"toogle-footer\">\r\n                        <button type=\"button\" className=\"cust-btn\">\r\n                          View Logs\r\n                        </button>\r\n                        <button type=\"button\" className=\"cust-btn\" onClick={this.getStatus}>\r\n                          {getFirmwareLoading?'Refreshing..':'Refresh'}\r\n                        </button>\r\n                        {/* <img\r\n                          className=\"close-firm\"\r\n                          src={require(\"./close.svg\")}\r\n                          title=\"close\"\r\n                          alt=\"...\"\r\n                        />\r\n                        <img\r\n                          className=\"upload-firm\"\r\n                          src={require(\"./upload.svg\")}\r\n                          title=\"upload\"\r\n                          alt=\"...\"\r\n                        />\r\n                        <img\r\n                          className=\"send-firm\"\r\n                          src={require(\"./send.svg\")}\r\n                          title=\"send\"\r\n                          alt=\"...\"\r\n                        /> */}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport \"./fileupload.css\";\r\nconst {\r\n  REACT_APP_SERVER,\r\n  REACT_APP_GETBLOBS,\r\n  REACT_APP_UPLOADBLOB\r\n} = process.env;\r\nconst columns = [\r\n  {\r\n    Header: \"Name\",\r\n    accessor: \"name\" // String-based value accessors!\r\n  },\r\n  {\r\n    Header: \"Download Link\",\r\n    resizable: true,\r\n    accessor: \"name\",\r\n    Cell: props => (\r\n      <a\r\n        href={`https://wrdm2chetanpackage.blob.core.windows.net/firmware/${\r\n          props.value\r\n        }`}\r\n      >\r\n        Link\r\n      </a>\r\n    )\r\n  },\r\n  {\r\n    Header: \"Date\",\r\n    accessor: \"lastModified\"\r\n  }\r\n];\r\nexport default class FileUpload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      blobs: [],\r\n      getBlobsLoading: false,\r\n      uploadFirmwareLoading: false\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getBlobDetails();\r\n  }\r\n\r\n  uploadFirmware = () => {\r\n    if (this.state.selectedFile) {\r\n      this.setState({ uploadFirmwareLoading: true });\r\n      const formData = new FormData();\r\n      formData.append(\"firmare\", this.state.selectedFile);\r\n      const config = {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Access-Control-Allow-Headers\":\"Authorization, Content-Type\",\r\n          \"Access-Control-Allow-Methods\": \"POST\"\r\n        }\r\n      };\r\n      axios\r\n        .post(REACT_APP_SERVER + REACT_APP_UPLOADBLOB, formData, config)\r\n        .then(response => {\r\n          console.log(\"ki\", response);\r\n          this.setState({ uploadFirmwareLoading: false });\r\n          if (response.data.status) {\r\n            alert(response.data.message);\r\n            this.getBlobDetails();\r\n          } else {\r\n            alert(response.data.message);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          alert(\"Error in upload\");\r\n          this.setState({ uploadFirmwareLoading: false });\r\n        });\r\n      document.getElementById(\"file\").value = \"\";\r\n      this.setState({ selectedFile: null });\r\n    } else {\r\n      alert(\"Please select a file\");\r\n    }\r\n  };\r\n\r\n  getBlobDetails = () => {\r\n    this.setState({ getBlobsLoading: true });\r\n    axios({\r\n      method: \"get\",\r\n      url: REACT_APP_SERVER + REACT_APP_GETBLOBS\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        if (response.data.status) {\r\n          this.setState({ blobs: response.data.blobs });\r\n        }\r\n        this.setState({ getBlobsLoading: false });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ getBlobsLoading: false });\r\n      });\r\n  };\r\n\r\n  handleselectedFile = event => {\r\n    event.preventDefault();\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n  };\r\n  render() {\r\n    const { blobs, getBlobsLoading } = this.state;\r\n    return (\r\n      <div>\r\n        <ReactTable\r\n          data={blobs}\r\n          columns={columns}\r\n          pageSizeOptions={[3]}\r\n          loading={getBlobsLoading}\r\n          showPagination={true}\r\n          defaultPageSize={3}\r\n          width={170}\r\n          loadingText={\"Fetching firmwares..\"}\r\n          noDataText={\"No Firmwares found..\"}\r\n        />\r\n        <div className=\"upload-container\">\r\n          <label>\r\n            <b>Upload Firmware file to blob: </b>\r\n          </label>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"custom-file\">\r\n              <input\r\n                id=\"file\"\r\n                type=\"file\"\r\n                accept=\".gz, .zip\"\r\n                onChange={this.handleselectedFile}\r\n                name=\"myFile\"\r\n              />\r\n              <br />\r\n              <br />\r\n            </div>\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"cust-btn\"\r\n                onClick={this.uploadFirmware}\r\n              >\r\n                Upload File\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport UploadTwin from \"../uploadTwin/uploadTwin\";\r\nimport \"./setlog.css\";\r\nimport StyledProgressbar from \"../common/styledProgressBar\";\r\nconst { REACT_APP_VM_SERVER, REACT_APP_GETSTATUS } = process.env;\r\nexport default class SetLog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settime: null,\r\n            buttonstatus: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n    }\r\n\r\n    updateSet = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            buttonstatus: true\r\n        })\r\n\r\n        if (this.state.settime == null) {\r\n            this.setState({\r\n                buttonstatus: false, settime: null\r\n            })\r\n            alert(\"Please enter all the fields\");\r\n        } else {\r\n            this.setState({ updateTwinLoading: true });\r\n            axios({\r\n                method: \"post\",\r\n                url: \"https://wrdm2-dockerbottleapi-chetan.azurewebsites.net/updatelogtime\",\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Headers\": \"Authorization, Content-Type\",\r\n                    \"Access-Control-Allow-Methods\": \"POST\"\r\n                },\r\n                data: {\r\n                    time: this.state.settime\r\n                }\r\n            })\r\n                .then(response => {\r\n                    console.log(response);\r\n                    this.setState({\r\n                        buttonstatus: false, settime: null\r\n                    })\r\n                    alert(\"Updated Successfully\")\r\n                    //document.getElementById(\"software\").value=null\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    alert('Error in time update')\r\n                    this.setState({\r\n                        buttonstatus: false, settime: null\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    handleInput = e => {\r\n        const { name, value } = e.target;\r\n        if (name === \"settime\") {\r\n            this.setState({ settime: value });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row update-row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"accordion\" id=\"accordionExample\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header toggle-card\" id=\"headingOne\">\r\n                                    <div\r\n                                        className=\"row\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        data-toggle=\"collapse\"\r\n                                        data-target=\"#toggleFirmware\"\r\n                                        role=\"button\"\r\n                                        aria-expanded=\"false\"\r\n                                        aria-controls=\"toggleFirmware\"\r\n                                    >\r\n                                        <img\r\n                                            className=\"img-upload\"\r\n                                            src={require(\"./play.svg\")}\r\n                                            alt=\"...\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target=\"#showFirmwareDetails\"\r\n                                        />\r\n                                        <p className=\"col-8 upload-text\">Set Log Time</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"collapse multi-collapse\" id=\"toggleFirmware\">\r\n                                        <div className=\"card firm-card\">\r\n                                            <div className=\"card-body\">\r\n                                                <form onSubmit={this.updateSet}>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"exampleInputEmail1\">Logging Time Interval (in Min)</label>\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"software\"\r\n                                                            value={this.state.settime}\r\n                                                            name=\"settime\"\r\n                                                            aria-describedby=\"softwareHelp\"\r\n                                                            placeholder=\"Duration in min\"\r\n                                                            onBlur={this.handleInput}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <button type=\"button\" className=\"cust-btn\" onClick={this.updateSet}>\r\n                                                        {this.state.buttonstatus ? \"Setting..\" : \"Set\"}\r\n                                                    </button>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Reboot from \"../reboot/reboot\";\r\nimport Log from '../log/log';\r\nimport Update from \"../update/update\";\r\nimport FileUpload from \"../fileupload/fileupload\";\r\nimport SetLog from \"../setlog/setlog\";\r\n\r\nexport default class Main extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container cust-home\">\r\n          <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header custom-header\" id=\"headingOne\">\r\n                <h5 className=\"mb-0\">\r\n                  <a\r\n                    href=\"false\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#collapseOne\"\r\n                    aria-expanded=\"true\"\r\n                    aria-controls=\"collapseOne\"\r\n                    style={{'color': 'white'}}\r\n                  >\r\n                    <span className=\"fa fa-tasks\" />\r\n                    <label>\r\n                      <b>&nbsp;&nbsp;Available Firmwares: </b>\r\n                    </label>\r\n                    <i className=\"fa fa-angle-down pull-right\" />\r\n                  </a>\r\n                </h5>\r\n              </div>\r\n\r\n              <div\r\n                id=\"collapseOne\"\r\n                className=\"collapse show\"\r\n                aria-labelledby=\"headingOne\"\r\n                data-parent=\"#accordionExample\"\r\n              >\r\n                <div className=\"card-body\">\r\n                  <FileUpload />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card\">\r\n              <div className=\"card-header custom-header\" id=\"headingTwo\">\r\n                <h5 className=\"mb-0\">\r\n                  <a\r\n                    href=\"false\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#collapseTwo\"\r\n                    aria-expanded=\"false\"\r\n                    aria-controls=\"collapseTwo\"\r\n                    style={{'color': 'white'}}\r\n                  >\r\n                    <span className=\"fa fa-spinner\" />\r\n                    <label>\r\n                      <b>&nbsp;&nbsp;Firmware upload: </b>\r\n                    </label>\r\n                    <i className=\"fa fa-angle-down pull-right\" />\r\n                  </a>\r\n                </h5>\r\n              </div>\r\n              <div\r\n                id=\"collapseTwo\"\r\n                className=\"collapse\"\r\n                aria-labelledby=\"headingTwo\"\r\n                data-parent=\"#accordionExample\"\r\n              >\r\n                <div className=\"card-body\">\r\n                  <Update />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card\">\r\n              <div className=\"card-header custom-header\" id=\"headingThree\">\r\n                <h5 className=\"mb-0\">\r\n                  <a\r\n                    href=\"false\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#collapseThree\"\r\n                    aria-expanded=\"false\"\r\n                    aria-controls=\"collapseThree\"\r\n                    style={{'color': 'white'}}\r\n                  >\r\n                    <span className=\"fa fa-desktop\" />\r\n                    <label>\r\n                      <b>&nbsp;&nbsp;Reboot status and logs: </b>\r\n                    </label>\r\n                    <i className=\"fa fa-angle-down pull-right\" />\r\n                  </a>\r\n                </h5>\r\n              </div>\r\n              <div\r\n                id=\"collapseThree\"\r\n                className=\"collapse\"\r\n                aria-labelledby=\"headingThree\"\r\n                data-parent=\"#accordionExample\"\r\n              >\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                  {\r\n                    \r\n                    <div className=\"col-6\">\r\n                      \r\n                        <Log />\r\n                        <Reboot />\r\n\r\n                      \r\n                    </div>\r\n                    \r\n                  }\r\n                    <div className=\"col-6\">\r\n\r\n                      <SetLog />\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\nimport $ from \"jquery\";\r\nconst {\r\n  REACT_APP_VM_SERVER,\r\n  REACT_APP_RUN_COMMAND,\r\n  REACT_APP_RUN_DIAG,\r\n  REACT_APP_GET_COMMAND\r\n} = process.env;\r\n\r\nexport default class RunCommand extends Component {\r\n  state = {\r\n    command: \"\",\r\n    response: \"\",\r\n    runnigCommand: false,\r\n    availableCmd: [\r\n      \"ifconfig\",\r\n      \"dmesg\",\r\n      \"df\",\r\n      \"ps\",\r\n      \"ls\",\r\n      \"tcpdump\",\r\n      \"date\",\r\n      \"lshw\",\r\n      \"lscpu\",\r\n      \"fdisk\",\r\n      \"netstat\"\r\n    ]\r\n  };\r\n  execCmd = e => {\r\n    e.preventDefault();\r\n    const { command, availableCmd } = this.state;\r\n    if (command === \"\") {\r\n      alert(\"Please enter command\");\r\n    } else if (availableCmd.filter(cmd => cmd == command.trim()).length == 0) {\r\n      alert(\"Please provide only available commands\");\r\n    } else {\r\n      this.setState({ runnigCommand: true });\r\n      axios({\r\n        method: \"post\",\r\n        url: REACT_APP_VM_SERVER + REACT_APP_RUN_COMMAND,\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Headers\": \"Authorization, Content-Type\",\r\n          \"Access-Control-Allow-Methods\": \"POST\"\r\n        },\r\n        data: {\r\n          method_name: \"runcommand\",\r\n          cmd: command\r\n        }\r\n      })\r\n        .then(response => {\r\n          console.log(response);\r\n          this.setState({ runnigCommand: false, response: response.data });\r\n        })\r\n        .catch(err => {\r\n          alert(\"Error executing command\");\r\n          console.log(err);\r\n          this.setState({ runnigCommand: false, response: err });\r\n        });\r\n    }\r\n  };\r\n\r\n  copyToClipboard = element => {\r\n    var $temp = $(\"<input>\");\r\n    $(\"body\").append($temp);\r\n    $temp.val($(element).text()).select();\r\n    document.execCommand(\"copy\");\r\n    $temp.remove();\r\n  };\r\n  render() {\r\n    const { command, runnigCommand, response, availableCmd } = this.state;\r\n    return (\r\n      <div className=\"row cmd-container\">\r\n        <form onSubmit={this.execCmd} className=\"col-8\">\r\n          <label htmlFor=\"commandToRun\">\r\n            <b>Command: </b>\r\n          </label>\r\n          <input\r\n            className=\"form-control cust-text-area\"\r\n            id=\"commandToRun\"\r\n            placeholder=\"Type a command to execute\"\r\n            value={command}\r\n            onChange={e => this.setState({ command: e.target.value })}\r\n          />\r\n          <button className=\"cust-btn margin-btn\" type=\"submit\">\r\n            {runnigCommand ? \"Command executing..\" : \"Run command\"}\r\n          </button>\r\n          <br />\r\n          <label htmlFor=\"response\">\r\n            <b>Output: </b>\r\n          </label>\r\n          <textarea\r\n            className=\"form-control cust-text-area\"\r\n            id=\"response\"\r\n            rows=\"4\"\r\n            placeholder=\"Command output\"\r\n            readOnly\r\n            value={response}\r\n          />\r\n        </form>\r\n        <div className=\"avail-cmds col-4\">\r\n          <h6>Available commands</h6>\r\n          <ul className=\"cmd-ul\">\r\n            {availableCmd.map((cmd, index) => (\r\n              <li key={index}>\r\n                <span id={index + cmd} style={{ margin: \"0px\" }}>\r\n                  {cmd}\r\n                </span>\r\n                <img\r\n                  className=\"copy-icon\"\r\n                  alt=\"copy\"\r\n                  src=\"copy.svg\"\r\n                  width=\"18\"\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"right\"\r\n                  title=\"Click to copy\"\r\n                  onClick={() => this.copyToClipboard(`#${index + cmd}`)}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Main from './components/main/main';\r\nimport RunCommand from './components/runCommand/runCommand';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/' component={Main} />\r\n        <Route path='/cmd' component={RunCommand} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(<BrowserRouter>\r\n  <App />\r\n</BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}